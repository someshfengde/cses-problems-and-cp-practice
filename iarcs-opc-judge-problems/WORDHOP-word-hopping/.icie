{"task_url":"https://www.codechef.com/IARCSJUD/problems/WORDHOP","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Word Hopping</h1>\n<p>In this problem we are concerned with words constructed using the lowercase letters of the English alphabet - that is, a,b,c,...,z. These words need not necessarily be meaningful: any sequence of letters forms a word. For example, abbca is a word.</p>\n<p>We say that we can &quot;hop&quot; from the word $w_1$ to the word $w_2$ if they are &quot;sufficiently close&quot;. We define $w_2$ to be sufficiently close to $w_1$ if one of the following holds:</p>\n<ul>\n<li>$w_2$ is obtained from $w_1$ by deleting one letter.</li>\n<li>$w_2$ is obtained from $w_1$ by replacing one of the letters in $w_1$ by some letter that appears to its right in $w_1$ and which is also to its right in alphabetical order.</li>\n</ul>\n<p>For example, we can hop from abbca to abca by deleting the second (or third letter). We can hop from aabca to abbca by replacing the a in the second position by the letter b that appears to the right of the a in aabca and which is also to its right in alphabetical order. On the other hand we cannot hop from abbca to aabca since we would need to replace the b in the second position by a, but a is to the left of b in alphabetical order.</p>\n<p>You will be given a collection of words $W$. Your task is to find the length of the longest sequence $w_1, w_2, \\ldots $ of distinct words from $W$ such that we may hop from $w_1$ to $w_2$, $w_2$ to $w_3$ and so on. We call this the hopping number for this set.</p>\n<p>For example, if</p>\n<p>$W$ = {abacd, bcdada, dd, abcd,bcdd, adcd, addd, aa, ccd, add, ad}</p>\n<p>then, the hopping number is 7 corresponding to the sequence</p>\n<p>abacd, abcd, adcd, addd, add, ad, dd</p>\n<h3>Input Format:</h3>\n<ul>\n<li>The first line of the input contains one integer $N$ indicating the number of words in the input. </li>\n<li>This is followed by $N$ lines of input, lines 2, 3,..., $N$+1, each containing one word over the letters {a,b,..., z}.</li>\n</ul>\n<h3>Output Format:</h3>\n<p>The output should be a single integer, indicating the hopping number of the given set of words.</p>\n<h3>Test Data:</h3>\n<ul>\n<li>$N \\leq 100$</li>\n<li>You may assume that each word has at most 10 letters.</li>\n</ul>\n<h3>Sample Input:</h3>\n<pre><code>11\nabacd\nbcdada\ndd\nabcd\nbcdd\nadcd\naddd\naa\nccd\nadd\nad\n</code></pre>\n<h3>Sample Output:</h3>\n<pre><code>7\n</code></pre>\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.</div></aside>\n\t<body>\n</html>"}}}