{"task_url":"https://www.codechef.com/IARCSJUD/problems/RANKFRAD","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Rank Fraud</h1>\n<p>Our friend the king decided to rank his ministers based on their ability to play table-tennis. He did not want to rely on chance upsets, so he asked his prime minister to organize a competition in which every minister played every other minister.</p>\n<p>Needless to say, at the end of the competition, each minister had won a few matches and lost a few matches, so there was no conclusive overall winner. Time was running out to deliver the results to the king and there was no time to organize a tie breaker. In a fit of inspiration, it occurred to the prime minister that if he could present the king with a list of names in which every minister had beaten the next minister in the list, the king would be satisfied that he had ranked the ministers in order of their abilities at table tennis.</p>\n<p>For instance, suppose that the ministers were numbered $1, 2, 3, 4$ and $5$ and the results of the competition were as follows:</p>\n<ul>\n<li>Minister $1$ beat ministers $2$ and $4$.</li>\n<li>Minister $2$ beat minister $5$.</li>\n<li>Minister $3$ beat ministers $1$ and $2$.</li>\n<li>Minister $4$ beat ministers $2, 3$ and $5$.</li>\n<li>Minister $5$ beat ministers $1$ and $3$.</li>\n</ul>\n<p>Then, the prime minister could present the following list to the king,</p>\n<pre><code>   4   3   1   2   5,\n</code></pre>\n<p>because Minister $4$ beat minister $3$, who beat minister $1$, who beat minister $2$, who beat minister $5$.</p>\n<p>The problem to be solved is the following: Given the results of the competition, identify a winning sequence as described above, if such a sequence exists. There may be more than one such sequence. It is sufficient to find any one. If no such sequence exists, you should say that there is no solution.</p>\n<h3>Input:</h3>\n<p>The first line of input is the number of ministers $N$. The ministers are numbered $1,2,...,N$.</p>\n<p>Lines $2$ to $N+1$ lines describe the performance of each of the $N$ ministers in the tournament. Line $i+1$, describing the performance of minister $i$, looks like the following,</p>\n<p>$$M ; P_1 ; P_2 ; ... P_M$$</p>\n<p>where $M$ is the number of entries that follow on this line and $P_1, P_2, ..., P_M$ are the ministers whom minister $i$ has beaten in the competition. This list is in an arbitrary order. Each minister plays every other minister exactly once. No draws are possible.</p>\n<h3>Output:</h3>\n<p>If a solution exists, the first line of the output consists of a single word <code>YES</code>. The following line must list out the ministers in the order required, separated by spaces. It is enough to print out any one solution, even if more than one solution exists. If no solution is possible, the output should consist of a single line with the word <code>NO</code> on it.</p>\n<h3>Constraints:</h3>\n<ul>\n<li>$2 \\leq N \\leq 2000$.</li>\n</ul>\n<h3>Sample Input</h3>\n<pre><code>5\n2 4 2\n1 5\n2 2 1\n3 2 5 3\n2 3 1\n</code></pre>\n<h3>Sample Output</h3>\n<pre><code>YES\n4 3 1 2 5\n</code></pre>\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.</div></aside>\n\t<body>\n</html>"}}}